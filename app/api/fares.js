// Generated by CoffeeScript 1.6.3
var Fare, async;

Fare = require('../models/fare');

async = require('async');

module.exports = function(app) {
  var lookup, report;
  lookup = function(req, res, next) {
    if (req.session && req.session.fare_id) {
      return Fare.findById(req.session.fare_id, function(err, fare) {
        if (err || (fare == null)) {
          req.session.fare_id = null;
          return res.send(500, err || 'Fare not found.');
        }
        req.fare = fare;
        return next();
      });
    } else {
      return next();
    }
  };
  report = function(fare) {
    return {
      state: fare.state,
      name: fare.name,
      long: fare.location[0],
      lat: fare.location[1]
    };
  };
  return app.post('/api/fare', lookup, function(req, res) {
    return async.waterfall([
      function(next) {
        if (!req.fare) {
          return next();
        }
        req.fare.state = 'canceled';
        req.fare.canceled = new Date();
        return req.fare.save(function(err) {
          if (err) {
            return next(err);
          }
          req.fare = null;
          req.session.fare_id = null;
          return next();
        });
      }, function(next) {
        var fare;
        fare = new Fare({
          name: req.body.name,
          location: [req.body.long, req.body.lat]
        });
        return fare.save(function(err) {
          if (err) {
            return next(err);
          }
          return next(null, fare);
        });
      }, function(fare, next) {
        req.fare = fare;
        req.session.fare_id = fare.id;
        return next(null, fare);
      }, function(fare, next) {
        res.send(200, report(fare));
        return next();
      }
    ], function(err) {
      if (err) {
        return res.send(500, err);
      }
    });
  });
};
